#!/usr/bin/php -q
<?PHP
/* Copyright 2005-2023, Lime Technology
 * Copyright 2012-2023, Bergware International.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */
?>
<?
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';

require_once "$docroot/webGui/include/Wrappers.php";
extract(parse_plugin_cfg('dynamix',true));

// add translations
$_SERVER['REQUEST_URI'] = 'settings';
$login_locale = _var($display,'locale');
require_once "$docroot/webGui/include/Translations.php";

function write(...$messages){
  $com = curl_init();
  curl_setopt_array($com,[
    CURLOPT_URL => 'http://localhost/pub/plugins?buffer_length=1',
    CURLOPT_UNIX_SOCKET_PATH => '/var/run/nginx.socket',
    CURLOPT_POST => 1,
    CURLOPT_RETURNTRANSFER => true
  ]);
  foreach ($messages as $message) {
    curl_setopt($com, CURLOPT_POSTFIELDS, $message);
    curl_exec($com);
  }
  curl_close($com);
}

write(_("SSD Trim started").". "._("Please wait")."...\n","\n");
// trim btrfs pools
$trim = popen('fstrim -va','r');
while (!feof($trim)) write(fgets($trim));
pclose($trim);
write("\n");

// trim zfs pools
exec("zpool status|grep -Po 'pool: \K.+'",$zfs_pools);
foreach ($zfs_pools as $pool) if ($pool) {
  unset($devs);
  exec("zpool trim $pool");
  while (true) {
    sleep(1);
    $trim = exec("zpool status -t $pool|grep -Pom1 '\d+% trimmed'");
    write("/mnt/$pool: $trim\r");
    if (substr($trim,0,3)==100) break;
  }
  $trim = preg_replace('/(.$)/',' $1',exec("zfs list $pool|grep -Pom1 '^$pool\s+\K\S+'"))."iB";
  $bytes = exec("zfs list -p $pool|grep -Pom1 '^$pool\s+\K\d+'");
  exec("zpool status -t $pool|grep -Po '^\s+\K.+100%'",$devs);
  $devs = implode(', ',array_map(function($dev){return "/dev/".strtok($dev,' ');},$devs));
  write("/mnt/$pool: $trim ($bytes bytes) trimmed on $devs\r","\n");
}
write(_("Finished")."\n",'_DONE_','');
?>
