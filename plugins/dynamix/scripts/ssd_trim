#!/usr/bin/php -q
<?PHP
/* Copyright 2005-2023, Lime Technology
 * Copyright 2012-2023, Bergware International.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */
?>
<?
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';

require_once "$docroot/webGui/include/Wrappers.php";
extract(parse_plugin_cfg('dynamix',true));

// cron operation
if ($argc==2 && $argv[1]=='cron') {
  // trim btrfs
  echo shell_exec("fstrim -va 2>/dev/null");
  // trim zfs
  zfs_trim(false);
  exit(0);
}

// add translations
$_SERVER['REQUEST_URI'] = 'settings';
$login_locale = _var($display,'locale');
require_once "$docroot/webGui/include/Translations.php";

function write(...$messages){
  $com = curl_init();
  curl_setopt_array($com,[
    CURLOPT_URL => 'http://localhost/pub/plugins?buffer_length=1',
    CURLOPT_UNIX_SOCKET_PATH => '/var/run/nginx.socket',
    CURLOPT_POST => 1,
    CURLOPT_RETURNTRANSFER => true
  ]);
  foreach ($messages as $message) {
    curl_setopt($com, CURLOPT_POSTFIELDS, $message);
    curl_exec($com);
  }
  curl_close($com);
}

function zfs_info($name) {
  $trim = preg_replace('/(.$)/',' $1',exec("zfs list -Ho used $name"))."iB";
  $bytes = exec("zfs list -Hpo used $name");
  exec("zpool list -vHP $name|grep -Po '^\s+\K/\S+'",$devs);
  return "/mnt/$name: $trim ($bytes bytes) trimmed on ".implode(', ',$devs);
}

function zfs_trim($write) {
  exec("zfs list -Ho name",$pools);
  foreach ($pools as $name) {
    if ($write) {
      write("/mnt/$name: ... <i class='fa fa-spin fa-circle-o-notch'></i>\r");
      if (exec("zpool trim -w $name 2>&1")=='') write(zfs_info($name)."\r","\n"); else write("\r");
    } else {
      if (exec("zpool trim -w $name 2>&1")=='') echo zfs_info($name)."\n";
    }
  }
}

write(_("TRIM operation started")."\n","\n","\n");
// trim btrfs
exec("findmnt -lnt btrfs|sort -rk2|awk '$1!~\"btrfs\"{print $1,$2}'",$mounts);
foreach ($mounts as $mount) {
  [$target,$source] = explode(' ',$mount);
  write("$target: ... <i class='fa fa-spin fa-circle-o-notch'></i>\r");
  write(exec("fstrim -v $target 2>/dev/null")." on $source\r","\n");
}
// trim zfs
zfs_trim(true);
write(_("Finished")."\n",'_DONE_','');
?>
